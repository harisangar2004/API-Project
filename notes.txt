npm start

IN TERMINAL
git init

$ node -v   
v21.4.0
$ npm -v    
10.2.4

$ git -v
git version 2.39.0.windows.2

 git init
Initialized empty Git repository in D:/coding/Web Development/#Bulid_Backend_REST_API_WITH_NODE/API_SIMPLE/.git/

$ npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help init` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg>` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (api_simple)
version: (1.0.0)                                                                                            
description: Simple API to know more how to build a backend with NodeJS
entry point: (index.js)                                                                                     
test command:                                                                                               
git repository:
keywords: Express, JS                                                                                       
author: Harisangar-A-P                                                                                      
license: (ISC) MIT                                                                                          
About to write to D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE\package.json:

{
  "name": "api_simple",
  "version": "1.0.0",
  "description": "Simple API to know more how to build a backend with NodeJS",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "Express",
    "JS"
  ],
  "author": "Harisangar-A-P",
  "license": "MIT"
}


Is this OK? (yes) yes
$ npm init -y
Wrote to D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE\package.json:

{
  "name": "api_simple",
  "version": "1.0.0",
  "description": "Simple API to know more how to build a backend with NodeJS",       
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "Express",
    "JS"
  ],
  "author": "Harisangar-A-P",
  "license": "MIT"
}


PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> npm help init
PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> npm help install
PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> npm install express

PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> npm install --save-dev @babel/core
PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> npm i body-parser

removed 1 package, and audited 120 packages in 2s

16 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> 

 npm install --save-dev @babel/core

PS D:\coding\Web Development\#Bulid_Backend_REST_API_WITH_NODE\API_SIMPLE> npm i body-parser

removed 1 package, and audited 120 packages in 2s

16 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
$ npm i ava 

added 202 packages, removed 1 package, and audited 322 packages in 17s

60 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities


$ npm install  -g nodemon

added 33 packages in 5s

4 packages are looking for funding
  run `npm fund` for details


$ npm install --save-dev nodemon

added 23 packages, and audited 345 packages in 2s

63 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

-------------- ------------ -------------

created file - server.js in parent folder src folder

npm install --save-dev @babel/node

added 87 packages, and audited 432 packages in 17s

109 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities

$ npm install ava --save-dev
npm WARN idealTree Removing dependencies.ava in favor of devDependencies.ava

up to date, audited 432 packages in 5s

109 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities
$ npm install --save-dev @babel/preset-env

nodemon server.js

write code in server.js


$ npm i http-status-codes

added 1 package, and audited 541 packages in 2s

113 packages are looking for funding
  run `npm fund` for details

found 0 vulnerabilities



src
│   index.js        # Entry point for application
└───config          # Application environment variables and secrets
└───controllers     # Express controllers for routes, respond to client requests, call services
└───loaders         # Handles all startup processes
└───middlewares     # Operations that check or maniuplate request prior to controller utilizing
└───models          # Database models
└───routes          # Express routes that define API structure
└───services        # Encapsulates all business logic
└───test            # Tests go here

created
modules/user.dao.js
server/user.service.js
routes.js


server -> user.routes -> user.controller -> user.service -> user.dao -> user.data 
                      -> user.schmes
                    
npm i express-yup-middleware
npm i yup - used for validations

npm i helmet - security OUR API

 npm i express-rate-limit - controlls a requests per time

 npm i compression

 npm i pino - logging 

npm i cors - requesting api

npm i @babel/core @babel/register --save-dev

